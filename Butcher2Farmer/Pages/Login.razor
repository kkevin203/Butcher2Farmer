@page "/login"

@using Database.Entities
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Identity

@inject SignInManager<User> SignInManager
@inject NavigationManager NavigationManager
@inject AuthService authService

<br />
@if (loginFailed)
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}
<br />

<h1>Se connecter</h1>

<EditForm OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="Email">Email</label>
        <InputText id="Email" class="form-control" @bind-Value="Email" />
        <ValidationMessage For="@(() => Email)" />
    </div>
    <div class="form-group">
        <label for="Password">Mot de passe</label>
        <InputText id="Password" type="password" class="form-control" @bind-Value="Password" />
        <ValidationMessage For="@(() => Password)" />
    </div>
    <button type="submit" class="btn btn-primary">Se connecter</button>
    <a href="/forgotpassword">Mot de passe oublié ?</a>
</EditForm>

@code {
    private string Email;
    private string Password;
    private bool loginFailed = false;
    private string errorMessage = "";

    private async Task HandleLogin()
    {
        var result = await SignInManager.PasswordSignInAsync(Email, Password, false, false);
        if (result.Succeeded)
        {
            if (!string.IsNullOrEmpty(NavigationManager.Uri))
            {
                NavigationManager.NavigateTo(NavigationManager.Uri);
            }
            else
            {
                NavigationManager.NavigateTo("/");
            }
        }
        else
        {
            loginFailed = true;
            errorMessage = "La connexion a échoué. Veuillez vérifier vos informations de connexion.";
        }
    }
}
