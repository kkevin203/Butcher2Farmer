@page "/farmer"
@using Database.Entities;
@using Microsoft.AspNetCore.Components;

@inject AnimalService animalService
@inject FarmerService farmerService

<h3>Farmers</h3>

<input type="text" @oninput="FilterFarmers" placeholder="Search by name..." />

@if (farmers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>FirstName</th>
                <th>Email</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var farmer in filteredFarmers)
            {
                <tr>
                    <td>@farmer.Id</td>
                    <td>@farmer.Name</td>
                    <td>@farmer.FirstName</td>
                    <td>@farmer.Email</td>
                    <button @onclick="() => SelectFarmer(farmer)">Select Farmer</button>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<Database.Entities.Farmer> farmers;
    List<Database.Entities.Farmer> filteredFarmers = new List<Database.Entities.Farmer>();
    Animal animalEnEdition = new Animal();

    //string filterText = "";

    protected override async Task OnInitializedAsync()
    {
        farmers = await farmerService.GetAllAsync();
        FilterFarmers(new ChangeEventArgs());
    }

    private void SelectFarmer(Database.Entities.Farmer selectedFarmer)
    {
        animalEnEdition.FarmerName = selectedFarmer.Name;
        filteredFarmers.Clear();
    }





    private void FilterFarmers(ChangeEventArgs args)
    {
        if (string.IsNullOrWhiteSpace(args.Value?.ToString()))
        {
            filteredFarmers = farmers;
        }
        else
        {
            filteredFarmers = farmers
                .Where(farmer =>
                    $"{farmer.Name}"
                    .Contains(args.Value?.ToString(), StringComparison.OrdinalIgnoreCase))
                .ToList();
        }
    }
}
